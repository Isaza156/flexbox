// reto # 1 :  Guía a esta rana hacia la hoja de lirio en la derecha, usando la propiedad justify-content, la cual alinea elementos horizontalmente y acepta los siguientes valores:

flex-start: Alinea elementos al lado izquierdo del contenedor.
flex-end: Alinea elementos al lado derecho del contenedor.
center: Alinea elementos en el centro del contenedor.
space-between: Muestra elementos con la misma distancia entre ellos.
space-around: Muestra elementos con la misma separación alrededor de ellos.

#pond {
    display: flex;
  justify-content: flex-end;
  }
----------------------------------------------------------------------------------------------------------------
// reto # 2: Nuevamente, utiliza justify-content para ayudar a esas ranas a llegar a sus hojas de lirio. Recuerda que esta propiedad CSS alinea elementos horizontalmente y acepta los siguientes valores:

#pond {
    display: flex;
  justify-content: center;
  }
----------------------------------------------------------------------------------------------------------------
// reto # 3: Ayuda a las tres ranas a encontrar sus hojas de lirio usando justify-content. En esta oportunidad, las hojas de lirio tienen mucho espacio a su alrededor.

Si no recuerdas los valores de una propiedad, puedes pasar el cursor sobre el nombre de una e inmediatamente se mostrarán. Prueba pasando el cursor sobre justify-content.

#pond {
    display: flex;
  justify-content: space-around;
  }
----------------------------------------------------------------------------------------------------------------
// reto 4: Ahora las hojas de lirio de los bordes se han desplazado a un costado, aumentando así el espacio entre ellas. Usa justify-content. En esta oportunidad, las hojas de lirio tienen el mismo espacio entre ellas.

#pond {
    display: flex;
  justify-content: space-between;
  } 
----------------------------------------------------------------------------------------------------------------
// reto 5: Ahora usa align-items para ayudar a las ranas a llegar al fondo del estanque. Esta propiedad CSS alinea elementos verticalmente y acepta los siguientes valores:

flex-start: Alinea elementos a la parte superior del contenedor.
flex-end: Alinea elementos a la parte inferior del contenedor.
center: Alinea elementos en el centro (verticalmente hablando) del contenedor.
baseline: Muestra elementos en la línea base del contenedor
stretch: Elementos se estiran para ajustarse al contenedor.

#pond {
    display: flex;
  align-items: flex-end;
  }
----------------------------------------------------------------------------------------------------------------
// reto 6: Mueve la rana al centro del estanque, usando una combinación de justify-content y align-items.

#pond {
    display: flex;
  justify-content: center;
  align-items: center;
  }
----------------------------------------------------------------------------------------------------------------
// reto 7: Nuevamente, las ranas necesitan cruzar el estanque. En esta oportunidad, las hojas de lirio tienen mucho espacio alrededor de ellas. Debes usar una combinación de justify-content y align-items.

#pond {
    display: flex;
  justify-content: space-around;
  align-items: flex-end;
  }
----------------------------------------------------------------------------------------------------------------
// reto 8: Las ranas necesitan ponerse en el mismo orden que sus hojas de lirio usando flex-direction. Esta propiedad CSS define la dirección de los elementos en el contenedor, y acepta los siguientes valores:

row: Elementos son colocados en la misma dirección del texto.
row-reverse: Elementos son colocados en la dirección opuesta al texto.
column: Elementos se colocan de arriba hacia abajo.
column-reverse: Elementos se colocan de abajo hacia arriba.

#pond {
    display: flex;
  flex-direction: row-reverse;
  }  
----------------------------------------------------------------------------------------------------------------
// reto 9: Ayuda a las ranas a encontrar su hoja de lirio en la columna usando flex-direction. Esta propiedad CSS define la dirección de los elementos en el contenedor, y acepta los siguientes valores:

row: Elementos son colocados en la misma dirección del texto.
row-reverse: Elementos son colocados en la dirección opuesta al texto.
column: Elementos se colocan de arriba hacia abajo.
column-reverse: Elementos se colocan de abajo hacia arriba.

#pond {
    display: flex;
  flex-direction: column;
  }
----------------------------------------------------------------------------------------------------------------
// reto 10: Ayuda a las ranas a llegar a sus hojas de lirio. A pesar de que ellas parecen estar cerca, necesitarás usar flex-direction y justify-content para llegar hasta allí.

Nota que cuando estableces la dirección a una fila invertida o columna, el inicio y el final también se invierten.

#pond {
    display: flex;
   flex-direction: row-reverse;
  justify-content: flex-end;
  }
----------------------------------------------------------------------------------------------------------------
// reto 11: Ayuda a las ranas a encontrar sus hojas de lirio usando flex-direction y justify-content.

Nota que cuando es una columna, justify-content cambia a vertical y align-items a horizontal.

#pond {
    display: flex;
  flex-direction: column; justify-content: flex-end; 
  
  }
----------------------------------------------------------------------------------------------------------------
//reto 12: Ayuda a las ranas a encontrar sus hojas de lirio usando flex-direction y justify-content.

#pond {
    display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
  }
----------------------------------------------------------------------------------------------------------------
// reto 13: Ayuda a las ranas a encontrar sus hojas de lirio usando flex-direction, justify-content, y align-items.

#pond {
    display: flex;
  flex-direction: row-reverse;
  justify-content: center;
  align-items: flex-end;
  }
----------------------------------------------------------------------------------------------------------------
// reto 14: A veces, invertir el orden de una fila o columna de un contenedor no es suficiente. En esos casos, nosotros podemos aplicar la propiedad order a elementos individuales. Por defecto, los elementos tienen un valor 0, pero nosotros podemos usar esta propiedad para establecerlo a un número entero positivo o negativo.

Usa la propiedad order para reordenar las ranas de acuerdo a sus hojas de lirio.

#pond {
    display: flex;
  }
  
  .yellow {
  order: 1; 
  }
----------------------------------------------------------------------------------------------------------------
// reto 15: Usa la propiedad order para enviar la rana de color rojo a su hoja de lirio.

#pond {
    display: flex;
  }
  
  .red {
  order: -2;
  }
----------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------